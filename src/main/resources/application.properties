# ??????
spring.application.name=music-recommendation
server.port=8080

# CORS (??? CRA dev 3000 ??)
app.cors.allowed-origin=http://localhost:3000

# Actuator
management.endpoint.caches.enabled=true
management.endpoints.web.exposure.include=caches,health,info

# ?? ?? (Spotify ??? ???)
logging.level.com.example.musicrecommendation.service.SpotifyService=DEBUG

# Spotify API (???? ??)
spotify.client.id=${SPOTIFY_CLIENT_ID}
spotify.client.secret=${SPOTIFY_CLIENT_SECRET}
spotify.api.base-url=https://api.spotify.com/v1
spotify.api.auth-url=https://accounts.spotify.com/api/token

# Resilience4j Retry (Spotify)
resilience4j.retry.instances.spotify.maxRetryAttempts=3
resilience4j.retry.instances.spotify.waitDuration=500ms
resilience4j.retry.instances.spotify.enableExponentialBackoff=true
resilience4j.retry.instances.spotify.exponentialBackoffMultiplier=2

# ??? (UTF-8)
logging.charset.console=UTF-8
logging.charset.file=UTF-8
spring.mvc.charset=UTF-8
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# ===========================
# OAuth2 ?? ??? ??
# ===========================

# --- Google ---
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email

# --- Kakao ---
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

# --- Naver ---
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=name,email

# --- Kakao Provider ---
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# --- Naver Provider ---
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# ===========================
# JPA ?? (?? ???: ??? ?? ??)
# ===========================
# spring.jpa.hibernate.ddl-auto=update
